I1230 01:05:09.396833  5795 caffe.cpp:113] Use GPU with device ID 11
I1230 01:05:10.712682  5795 caffe.cpp:121] Starting Optimization
I1230 01:05:10.712865  5795 solver.cpp:32] Initializing solver from parameters: 
test_iter: 1000
test_interval: 4000
base_lr: 0.01
display: 40
max_iter: 200000
lr_policy: "step"
gamma: 0.96
momentum: 0.9
weight_decay: 0.0002
stepsize: 320000
snapshot: 5000
snapshot_prefix: "examples/kaggle2/googlenet/bvlc_googlenet_txt_lr_1e-2_1020"
solver_mode: GPU
net: "examples/kaggle2/googlenet/train_val_txt_1020_orient.prototxt"
test_initialization: false
average_loss: 40
I1230 01:05:10.712901  5795 solver.cpp:70] Creating training net from net file: examples/kaggle2/googlenet/train_val_txt_1020_orient.prototxt
I1230 01:05:10.720162  5795 net.cpp:257] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I1230 01:05:10.720253  5795 net.cpp:257] The NetState phase (0) differed from the phase (1) specified by a rule in layer loss1/top-1
I1230 01:05:10.720265  5795 net.cpp:257] The NetState phase (0) differed from the phase (1) specified by a rule in layer loss1/top-5
I1230 01:05:10.720314  5795 net.cpp:257] The NetState phase (0) differed from the phase (1) specified by a rule in layer loss2/top-1
I1230 01:05:10.720331  5795 net.cpp:257] The NetState phase (0) differed from the phase (1) specified by a rule in layer loss2/top-5
I1230 01:05:10.720377  5795 net.cpp:257] The NetState phase (0) differed from the phase (1) specified by a rule in layer loss3/top-1
I1230 01:05:10.720387  5795 net.cpp:257] The NetState phase (0) differed from the phase (1) specified by a rule in layer loss3/top-5
I1230 01:05:10.722692  5795 net.cpp:42] Initializing net from parameters: 
name: "MYNET"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: false
    crop_size: 224
    mean_value: 129
    mean_value: 129
    mean_value: 129
  }
  image_data_param {
    source: "/home/coldmanck/kaggle/label_train_full_orient.txt"
    batch_size: 80
    shuffle: true
  }
}
layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1/relu_7x7"
  type: "ReLU"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s2"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "pool1/norm1"
  type: "LRN"
  bottom: "pool1/3x3_s2"
  top: "pool1/norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2/3x3_reduce"
  type: "Convolution"
  bottom: "pool1/norm1"
  top: "conv2/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3_reduce"
  type: "ReLU"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
}
layer {
  name: "conv2/3x3"
  type: "Convolution"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2/relu_3x3"
  type: "ReLU"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
}
layer {
  name: "conv2/norm2"
  type: "LRN"
  bottom: "conv2/3x3"
  top: "conv2/norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/norm2"
  top: "pool2/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a/1x1"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_1x1"
  type: "ReLU"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
}
layer {
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
}
layer {
  name: "inception_3a/3x3"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_3x3"
  type: "ReLU"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
}
layer {
  name: "inception_3a/5x5_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5_reduce"
}
layer {
  name: "inception_3a/5x5"
  type: "Convolution"
  bottom: "inception_3a/5x5_reduce"
  top: "inception_3a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_5x5"
  type: "ReLU"
  bottom: "inception_3a/5x5"
  top: "inception_3a/5x5"
}
layer {
  name: "inception_3a/pool"
  type: "Pooling"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a/pool_proj"
  type: "Convolution"
  bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
}
layer {
  name: "inception_3a/output"
  type: "Concat"
  bottom: "inception_3a/1x1"
  bottom: "inception_3a/3x3"
  bottom: "inception_3a/5x5"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/output"
}
layer {
  name: "inception_3b/1x1"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_1x1"
  type: "ReLU"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
}
layer {
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
}
layer {
  name: "inception_3b/3x3"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_3x3"
  type: "ReLU"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
}
layer {
  name: "inception_3b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5_reduce"
}
layer {
  name: "inception_3b/5x5"
  type: "Convolution"
  bottom: "inception_3b/5x5_reduce"
  top: "inception_3b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_5x5"
  type: "ReLU"
  bottom: "inception_3b/5x5"
  top: "inception_3b/5x5"
}
layer {
  name: "inception_3b/pool"
  type: "Pooling"
  bottom: "inception_3a/output"
  top: "inception_3b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b/pool_proj"
  type: "Convolution"
  bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_3b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
}
layer {
  name: "inception_3b/output"
  type: "Concat"
  bottom: "inception_3b/1x1"
  bottom: "inception_3b/3x3"
  bottom: "inception_3b/5x5"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/output"
}
layer {
  name: "pool3/3x3_s2"
  type: "Pooling"
  bottom: "inception_3b/output"
  top: "pool3/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4a/1x1"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_1x1"
  type: "ReLU"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
}
layer {
  name: "inception_4a/3x3_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
}
layer {
  name: "inception_4a/3x3"
  type: "Convolution"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 208
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_3x3"
  type: "ReLU"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
}
layer {
  name: "inception_4a/5x5_reduce"
  type: "Convolution"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5_reduce"
}
layer {
  name: "inception_4a/5x5"
  type: "Convolution"
  bottom: "inception_4a/5x5_reduce"
  top: "inception_4a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 48
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_5x5"
  type: "ReLU"
  bottom: "inception_4a/5x5"
  top: "inception_4a/5x5"
}
layer {
  name: "inception_4a/pool"
  type: "Pooling"
  bottom: "pool3/3x3_s2"
  top: "inception_4a/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4a/pool_proj"
  type: "Convolution"
  bottom: "inception_4a/pool"
  top: "inception_4a/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
}
layer {
  name: "inception_4a/output"
  type: "Concat"
  bottom: "inception_4a/1x1"
  bottom: "inception_4a/3x3"
  bottom: "inception_4a/5x5"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/output"
}
layer {
  name: "loss1/ave_pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "loss1/ave_pool"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss1/conv"
  type: "Convolution"
  bottom: "loss1/ave_pool"
  top: "loss1/conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_conv"
  type: "ReLU"
  bottom: "loss1/conv"
  top: "loss1/conv"
}
layer {
  name: "loss1/fc"
  type: "InnerProduct"
  bottom: "loss1/conv"
  top: "loss1/fc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss1/relu_fc"
  type: "ReLU"
  bottom: "loss1/fc"
  top: "loss1/fc"
}
layer {
  name: "loss1/drop_fc"
  type: "Dropout"
  bottom: "loss1/fc"
  top: "loss1/fc"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "loss1/classifier_kaggle"
  type: "InnerProduct"
  bottom: "loss1/fc"
  top: "loss1/classifier_kaggle"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 447
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss1/loss"
  type: "SoftmaxWithLoss"
  bottom: "loss1/classifier_kaggle"
  bottom: "label"
  top: "loss1/loss1"
  loss_weight: 0.3
}
layer {
  name: "inception_4b/1x1"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_1x1"
  type: "ReLU"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
}
layer {
  name: "inception_4b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
}
layer {
  name: "inception_4b/3x3"
  type: "Convolution"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 224
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_3x3"
  type: "ReLU"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
}
layer {
  name: "inception_4b/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5_reduce"
}
layer {
  name: "inception_4b/5x5"
  type: "Convolution"
  bottom: "inception_4b/5x5_reduce"
  top: "inception_4b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_5x5"
  type: "ReLU"
  bottom: "inception_4b/5x5"
  top: "inception_4b/5x5"
}
layer {
  name: "inception_4b/pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "inception_4b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4b/pool_proj"
  type: "Convolution"
  bottom: "inception_4b/pool"
  top: "inception_4b/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
}
layer {
  name: "inception_4b/output"
  type: "Concat"
  bottom: "inception_4b/1x1"
  bottom: "inception_4b/3x3"
  bottom: "inception_4b/5x5"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/output"
}
layer {
  name: "inception_4c/1x1"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_1x1"
  type: "ReLU"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
}
layer {
  name: "inception_4c/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
}
layer {
  name: "inception_4c/3x3"
  type: "Convolution"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_3x3"
  type: "ReLU"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
}
layer {
  name: "inception_4c/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 24
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5_reduce"
}
layer {
  name: "inception_4c/5x5"
  type: "Convolution"
  bottom: "inception_4c/5x5_reduce"
  top: "inception_4c/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_5x5"
  type: "ReLU"
  bottom: "inception_4c/5x5"
  top: "inception_4c/5x5"
}
layer {
  name: "inception_4c/pool"
  type: "Pooling"
  bottom: "inception_4b/output"
  top: "inception_4c/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4c/pool_proj"
  type: "Convolution"
  bottom: "inception_4c/pool"
  top: "inception_4c/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4c/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
}
layer {
  name: "inception_4c/output"
  type: "Concat"
  bottom: "inception_4c/1x1"
  bottom: "inception_4c/3x3"
  bottom: "inception_4c/5x5"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/output"
}
layer {
  name: "inception_4d/1x1"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 112
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_1x1"
  type: "ReLU"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
}
layer {
  name: "inception_4d/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 144
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
}
layer {
  name: "inception_4d/3x3"
  type: "Convolution"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 288
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_3x3"
  type: "ReLU"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
}
layer {
  name: "inception_4d/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5_reduce"
}
layer {
  name: "inception_4d/5x5"
  type: "Convolution"
  bottom: "inception_4d/5x5_reduce"
  top: "inception_4d/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_5x5"
  type: "ReLU"
  bottom: "inception_4d/5x5"
  top: "inception_4d/5x5"
}
layer {
  name: "inception_4d/pool"
  type: "Pooling"
  bottom: "inception_4c/output"
  top: "inception_4d/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4d/pool_proj"
  type: "Convolution"
  bottom: "inception_4d/pool"
  top: "inception_4d/pool_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4d/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
}
layer {
  name: "inception_4d/output"
  type: "Concat"
  bottom: "inception_4d/1x1"
  bottom: "inception_4d/3x3"
  bottom: "inception_4d/5x5"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/output"
}
layer {
  name: "loss2/ave_pool"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "loss2/ave_pool"
  pooling_param {
    pool: AVE
    kernel_size: 5
    stride: 3
  }
}
layer {
  name: "loss2/conv"
  type: "Convolution"
  bottom: "loss2/ave_pool"
  top: "loss2/conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss2/relu_conv"
  type: "ReLU"
  bottom: "loss2/conv"
  top: "loss2/conv"
}
layer {
  name: "loss2/fc"
  type: "InnerProduct"
  bottom: "loss2/conv"
  top: "loss2/fc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "loss2/relu_fc"
  type: "ReLU"
  bottom: "loss2/fc"
  top: "loss2/fc"
}
layer {
  name: "loss2/drop_fc"
  type: "Dropout"
  bottom: "loss2/fc"
  top: "loss2/fc"
  dropout_param {
    dropout_ratio: 0.7
  }
}
layer {
  name: "loss2/classifier_kaggle"
  type: "InnerProduct"
  bottom: "loss2/fc"
  top: "loss2/classifier_kaggle"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 447
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss2/loss"
  type: "SoftmaxWithLoss"
  bottom: "loss2/classifier_kaggle"
  bottom: "label"
  top: "loss2/loss1"
  loss_weight: 0.3
}
layer {
  name: "inception_4e/1x1"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_1x1"
  type: "ReLU"
  bottom: "inception_4e/1x1"
  top: "inception_4e/1x1"
}
layer {
  name: "inception_4e/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 160
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
}
layer {
  name: "inception_4e/3x3"
  type: "Convolution"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 320
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_3x3"
  type: "ReLU"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
}
layer {
  name: "inception_4e/5x5_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_5x5_reduce"
  type: "ReLU"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5_reduce"
}
layer {
  name: "inception_4e/5x5"
  type: "Convolution"
  bottom: "inception_4e/5x5_reduce"
  top: "inception_4e/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "inception_4e/relu_5x5"
  type: "ReLU"
  bottom: "inception_4e/5x5"
  top: "inception_4e/5x5"
}
layer {
  name: "inception_4e/pool"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "inception_4e/pool"
  po
I1230 01:05:10.726145  5795 layer_factory.hpp:74] Creating layer data
I1230 01:05:10.726197  5795 net.cpp:84] Creating Layer data
I1230 01:05:10.726212  5795 net.cpp:338] data -> data
I1230 01:05:10.726263  5795 net.cpp:338] data -> label
I1230 01:05:10.726284  5795 net.cpp:113] Setting up data
I1230 01:05:10.726294  5795 image_data_layer.cpp:36] Opening file /home/coldmanck/kaggle/label_train_full_orient.txt
I1230 01:05:10.729980  5795 image_data_layer.cpp:46] Shuffling data
I1230 01:05:10.731153  5795 image_data_layer.cpp:51] A total of 4235 images.
I1230 01:05:10.739179  5795 image_data_layer.cpp:80] output data size: 80,3,224,224
I1230 01:05:11.226807  5795 net.cpp:120] Top shape: 80 3 224 224 (12042240)
I1230 01:05:11.226902  5795 net.cpp:120] Top shape: 80 (80)
I1230 01:05:11.226924  5795 layer_factory.hpp:74] Creating layer label_data_1_split
I1230 01:05:11.227010  5795 net.cpp:84] Creating Layer label_data_1_split
I1230 01:05:11.227026  5795 net.cpp:380] label_data_1_split <- label
I1230 01:05:11.227052  5795 net.cpp:338] label_data_1_split -> label_data_1_split_0
I1230 01:05:11.227073  5795 net.cpp:338] label_data_1_split -> label_data_1_split_1
I1230 01:05:11.227099  5795 net.cpp:338] label_data_1_split -> label_data_1_split_2
I1230 01:05:11.227130  5795 net.cpp:113] Setting up label_data_1_split
I1230 01:05:11.227147  5795 net.cpp:120] Top shape: 80 (80)
I1230 01:05:11.227156  5795 net.cpp:120] Top shape: 80 (80)
I1230 01:05:11.227166  5795 net.cpp:120] Top shape: 80 (80)
I1230 01:05:11.227176  5795 layer_factory.hpp:74] Creating layer conv1/7x7_s2
I1230 01:05:11.227196  5795 net.cpp:84] Creating Layer conv1/7x7_s2
I1230 01:05:11.227205  5795 net.cpp:380] conv1/7x7_s2 <- data
I1230 01:05:11.227221  5795 net.cpp:338] conv1/7x7_s2 -> conv1/7x7_s2
I1230 01:05:11.227241  5795 net.cpp:113] Setting up conv1/7x7_s2
I1230 01:05:11.495389  5795 net.cpp:120] Top shape: 80 64 112 112 (64225280)
I1230 01:05:11.495478  5795 layer_factory.hpp:74] Creating layer conv1/relu_7x7
I1230 01:05:11.495499  5795 net.cpp:84] Creating Layer conv1/relu_7x7
I1230 01:05:11.495508  5795 net.cpp:380] conv1/relu_7x7 <- conv1/7x7_s2
I1230 01:05:11.495523  5795 net.cpp:327] conv1/relu_7x7 -> conv1/7x7_s2 (in-place)
I1230 01:05:11.495543  5795 net.cpp:113] Setting up conv1/relu_7x7
I1230 01:05:11.506652  5795 net.cpp:120] Top shape: 80 64 112 112 (64225280)
I1230 01:05:11.506705  5795 layer_factory.hpp:74] Creating layer pool1/3x3_s2
I1230 01:05:11.506736  5795 net.cpp:84] Creating Layer pool1/3x3_s2
I1230 01:05:11.506747  5795 net.cpp:380] pool1/3x3_s2 <- conv1/7x7_s2
I1230 01:05:11.506769  5795 net.cpp:338] pool1/3x3_s2 -> pool1/3x3_s2
I1230 01:05:11.506788  5795 net.cpp:113] Setting up pool1/3x3_s2
I1230 01:05:11.506917  5795 net.cpp:120] Top shape: 80 64 56 56 (16056320)
I1230 01:05:11.506930  5795 layer_factory.hpp:74] Creating layer pool1/norm1
I1230 01:05:11.506947  5795 net.cpp:84] Creating Layer pool1/norm1
I1230 01:05:11.506955  5795 net.cpp:380] pool1/norm1 <- pool1/3x3_s2
I1230 01:05:11.506968  5795 net.cpp:338] pool1/norm1 -> pool1/norm1
I1230 01:05:11.506983  5795 net.cpp:113] Setting up pool1/norm1
I1230 01:05:11.506996  5795 net.cpp:120] Top shape: 80 64 56 56 (16056320)
I1230 01:05:11.507006  5795 layer_factory.hpp:74] Creating layer conv2/3x3_reduce
I1230 01:05:11.507024  5795 net.cpp:84] Creating Layer conv2/3x3_reduce
I1230 01:05:11.507032  5795 net.cpp:380] conv2/3x3_reduce <- pool1/norm1
I1230 01:05:11.507045  5795 net.cpp:338] conv2/3x3_reduce -> conv2/3x3_reduce
I1230 01:05:11.507062  5795 net.cpp:113] Setting up conv2/3x3_reduce
I1230 01:05:11.508787  5795 net.cpp:120] Top shape: 80 64 56 56 (16056320)
I1230 01:05:11.508817  5795 layer_factory.hpp:74] Creating layer conv2/relu_3x3_reduce
I1230 01:05:11.508833  5795 net.cpp:84] Creating Layer conv2/relu_3x3_reduce
I1230 01:05:11.508841  5795 net.cpp:380] conv2/relu_3x3_reduce <- conv2/3x3_reduce
I1230 01:05:11.508853  5795 net.cpp:327] conv2/relu_3x3_reduce -> conv2/3x3_reduce (in-place)
I1230 01:05:11.508865  5795 net.cpp:113] Setting up conv2/relu_3x3_reduce
I1230 01:05:11.508954  5795 net.cpp:120] Top shape: 80 64 56 56 (16056320)
I1230 01:05:11.508965  5795 layer_factory.hpp:74] Creating layer conv2/3x3
I1230 01:05:11.508980  5795 net.cpp:84] Creating Layer conv2/3x3
I1230 01:05:11.508988  5795 net.cpp:380] conv2/3x3 <- conv2/3x3_reduce
I1230 01:05:11.509002  5795 net.cpp:338] conv2/3x3 -> conv2/3x3
I1230 01:05:11.509016  5795 net.cpp:113] Setting up conv2/3x3
I1230 01:05:11.511137  5795 net.cpp:120] Top shape: 80 192 56 56 (48168960)
I1230 01:05:11.511163  5795 layer_factory.hpp:74] Creating layer conv2/relu_3x3
I1230 01:05:11.511176  5795 net.cpp:84] Creating Layer conv2/relu_3x3
I1230 01:05:11.511184  5795 net.cpp:380] conv2/relu_3x3 <- conv2/3x3
I1230 01:05:11.511196  5795 net.cpp:327] conv2/relu_3x3 -> conv2/3x3 (in-place)
I1230 01:05:11.511209  5795 net.cpp:113] Setting up conv2/relu_3x3
I1230 01:05:11.512151  5795 net.cpp:120] Top shape: 80 192 56 56 (48168960)
I1230 01:05:11.512171  5795 layer_factory.hpp:74] Creating layer conv2/norm2
I1230 01:05:11.512183  5795 net.cpp:84] Creating Layer conv2/norm2
I1230 01:05:11.512192  5795 net.cpp:380] conv2/norm2 <- conv2/3x3
I1230 01:05:11.512217  5795 net.cpp:338] conv2/norm2 -> conv2/norm2
I1230 01:05:11.512244  5795 net.cpp:113] Setting up conv2/norm2
I1230 01:05:11.512259  5795 net.cpp:120] Top shape: 80 192 56 56 (48168960)
I1230 01:05:11.512267  5795 layer_factory.hpp:74] Creating layer pool2/3x3_s2
I1230 01:05:11.512279  5795 net.cpp:84] Creating Layer pool2/3x3_s2
I1230 01:05:11.512287  5795 net.cpp:380] pool2/3x3_s2 <- conv2/norm2
I1230 01:05:11.512298  5795 net.cpp:338] pool2/3x3_s2 -> pool2/3x3_s2
I1230 01:05:11.512310  5795 net.cpp:113] Setting up pool2/3x3_s2
I1230 01:05:11.512406  5795 net.cpp:120] Top shape: 80 192 28 28 (12042240)
I1230 01:05:11.512418  5795 layer_factory.hpp:74] Creating layer pool2/3x3_s2_pool2/3x3_s2_0_split
I1230 01:05:11.512429  5795 net.cpp:84] Creating Layer pool2/3x3_s2_pool2/3x3_s2_0_split
I1230 01:05:11.512437  5795 net.cpp:380] pool2/3x3_s2_pool2/3x3_s2_0_split <- pool2/3x3_s2
I1230 01:05:11.512450  5795 net.cpp:338] pool2/3x3_s2_pool2/3x3_s2_0_split -> pool2/3x3_s2_pool2/3x3_s2_0_split_0
I1230 01:05:11.512464  5795 net.cpp:338] pool2/3x3_s2_pool2/3x3_s2_0_split -> pool2/3x3_s2_pool2/3x3_s2_0_split_1
I1230 01:05:11.512476  5795 net.cpp:338] pool2/3x3_s2_pool2/3x3_s2_0_split -> pool2/3x3_s2_pool2/3x3_s2_0_split_2
I1230 01:05:11.512488  5795 net.cpp:338] pool2/3x3_s2_pool2/3x3_s2_0_split -> pool2/3x3_s2_pool2/3x3_s2_0_split_3
I1230 01:05:11.512500  5795 net.cpp:113] Setting up pool2/3x3_s2_pool2/3x3_s2_0_split
I1230 01:05:11.512512  5795 net.cpp:120] Top shape: 80 192 28 28 (12042240)
I1230 01:05:11.512522  5795 net.cpp:120] Top shape: 80 192 28 28 (12042240)
I1230 01:05:11.512531  5795 net.cpp:120] Top shape: 80 192 28 28 (12042240)
I1230 01:05:11.512542  5795 net.cpp:120] Top shape: 80 192 28 28 (12042240)
I1230 01:05:11.512549  5795 layer_factory.hpp:74] Creating layer inception_3a/1x1
I1230 01:05:11.512562  5795 net.cpp:84] Creating Layer inception_3a/1x1
I1230 01:05:11.512572  5795 net.cpp:380] inception_3a/1x1 <- pool2/3x3_s2_pool2/3x3_s2_0_split_0
I1230 01:05:11.512583  5795 net.cpp:338] inception_3a/1x1 -> inception_3a/1x1
I1230 01:05:11.512598  5795 net.cpp:113] Setting up inception_3a/1x1
I1230 01:05:11.513522  5795 net.cpp:120] Top shape: 80 64 28 28 (4014080)
I1230 01:05:11.513546  5795 layer_factory.hpp:74] Creating layer inception_3a/relu_1x1
I1230 01:05:11.513558  5795 net.cpp:84] Creating Layer inception_3a/relu_1x1
I1230 01:05:11.513566  5795 net.cpp:380] inception_3a/relu_1x1 <- inception_3a/1x1
I1230 01:05:11.513581  5795 net.cpp:327] inception_3a/relu_1x1 -> inception_3a/1x1 (in-place)
I1230 01:05:11.513592  5795 net.cpp:113] Setting up inception_3a/relu_1x1
I1230 01:05:11.513682  5795 net.cpp:120] Top shape: 80 64 28 28 (4014080)
I1230 01:05:11.513694  5795 layer_factory.hpp:74] Creating layer inception_3a/3x3_reduce
I1230 01:05:11.513707  5795 net.cpp:84] Creating Layer inception_3a/3x3_reduce
I1230 01:05:11.513715  5795 net.cpp:380] inception_3a/3x3_reduce <- pool2/3x3_s2_pool2/3x3_s2_0_split_1
I1230 01:05:11.513728  5795 net.cpp:338] inception_3a/3x3_reduce -> inception_3a/3x3_reduce
I1230 01:05:11.513741  5795 net.cpp:113] Setting up inception_3a/3x3_reduce
I1230 01:05:11.515285  5795 net.cpp:120] Top shape: 80 96 28 28 (6021120)
I1230 01:05:11.515311  5795 layer_factory.hpp:74] Creating layer inception_3a/relu_3x3_reduce
I1230 01:05:11.515324  5795 net.cpp:84] Creating Layer inception_3a/relu_3x3_reduce
I1230 01:05:11.515333  5795 net.cpp:380] inception_3a/relu_3x3_reduce <- inception_3a/3x3_reduce
I1230 01:05:11.515346  5795 net.cpp:327] inception_3a/relu_3x3_reduce -> inception_3a/3x3_reduce (in-place)
I1230 01:05:11.515357  5795 net.cpp:113] Setting up inception_3a/relu_3x3_reduce
I1230 01:05:11.515444  5795 net.cpp:120] Top shape: 80 96 28 28 (6021120)
I1230 01:05:11.515455  5795 layer_factory.hpp:74] Creating layer inception_3a/3x3
I1230 01:05:11.515468  5795 net.cpp:84] Creating Layer inception_3a/3x3
I1230 01:05:11.515476  5795 net.cpp:380] inception_3a/3x3 <- inception_3a/3x3_reduce
I1230 01:05:11.515488  5795 net.cpp:338] inception_3a/3x3 -> inception_3a/3x3
I1230 01:05:11.515509  5795 net.cpp:113] Setting up inception_3a/3x3
I1230 01:05:11.529902  5795 net.cpp:120] Top shape: 80 128 28 28 (8028160)
I1230 01:05:11.529959  5795 layer_factory.hpp:74] Creating layer inception_3a/relu_3x3
I1230 01:05:11.529983  5795 net.cpp:84] Creating Layer inception_3a/relu_3x3
I1230 01:05:11.529994  5795 net.cpp:380] inception_3a/relu_3x3 <- inception_3a/3x3
I1230 01:05:11.530009  5795 net.cpp:327] inception_3a/relu_3x3 -> inception_3a/3x3 (in-place)
I1230 01:05:11.530026  5795 net.cpp:113] Setting up inception_3a/relu_3x3
I1230 01:05:11.530695  5795 net.cpp:120] Top shape: 80 128 28 28 (8028160)
I1230 01:05:11.530714  5795 layer_factory.hpp:74] Creating layer inception_3a/5x5_reduce
I1230 01:05:11.530730  5795 net.cpp:84] Creating Layer inception_3a/5x5_reduce
I1230 01:05:11.530740  5795 net.cpp:380] inception_3a/5x5_reduce <- pool2/3x3_s2_pool2/3x3_s2_0_split_2
I1230 01:05:11.530756  5795 net.cpp:338] inception_3a/5x5_reduce -> inception_3a/5x5_reduce
I1230 01:05:11.530781  5795 net.cpp:113] Setting up inception_3a/5x5_reduce
I1230 01:05:11.532047  5795 net.cpp:120] Top shape: 80 16 28 28 (1003520)
I1230 01:05:11.532071  5795 layer_factory.hpp:74] Creating layer inception_3a/relu_5x5_reduce
I1230 01:05:11.532084  5795 net.cpp:84] Creating Layer inception_3a/relu_5x5_reduce
I1230 01:05:11.532094  5795 net.cpp:380] inception_3a/relu_5x5_reduce <- inception_3a/5x5_reduce
I1230 01:05:11.532109  5795 net.cpp:327] inception_3a/relu_5x5_reduce -> inception_3a/5x5_reduce (in-place)
I1230 01:05:11.532121  5795 net.cpp:113] Setting up inception_3a/relu_5x5_reduce
I1230 01:05:11.532219  5795 net.cpp:120] Top shape: 80 16 28 28 (1003520)
I1230 01:05:11.532230  5795 layer_factory.hpp:74] Creating layer inception_3a/5x5
I1230 01:05:11.532245  5795 net.cpp:84] Creating Layer inception_3a/5x5
I1230 01:05:11.532254  5795 net.cpp:380] inception_3a/5x5 <- inception_3a/5x5_reduce
I1230 01:05:11.532269  5795 net.cpp:338] inception_3a/5x5 -> inception_3a/5x5
I1230 01:05:11.532284  5795 net.cpp:113] Setting up inception_3a/5x5
I1230 01:05:11.533361  5795 net.cpp:120] Top shape: 80 32 28 28 (2007040)
I1230 01:05:11.533385  5795 layer_factory.hpp:74] Creating layer inception_3a/relu_5x5
I1230 01:05:11.533401  5795 net.cpp:84] Creating Layer inception_3a/relu_5x5
I1230 01:05:11.533411  5795 net.cpp:380] inception_3a/relu_5x5 <- inception_3a/5x5
I1230 01:05:11.533422  5795 net.cpp:327] inception_3a/relu_5x5 -> inception_3a/5x5 (in-place)
I1230 01:05:11.533434  5795 net.cpp:113] Setting up inception_3a/relu_5x5
I1230 01:05:11.533532  5795 net.cpp:120] Top shape: 80 32 28 28 (2007040)
I1230 01:05:11.533557  5795 layer_factory.hpp:74] Creating layer inception_3a/pool
I1230 01:05:11.533567  5795 layer_factory.cpp:56] CUDNN does not support padding or multiple tops. Using Caffe's own pooling layer.
I1230 01:05:11.533582  5795 net.cpp:84] Creating Layer inception_3a/pool
I1230 01:05:11.533592  5795 net.cpp:380] inception_3a/pool <- pool2/3x3_s2_pool2/3x3_s2_0_split_3
I1230 01:05:11.533603  5795 net.cpp:338] inception_3a/pool -> inception_3a/pool
I1230 01:05:11.533617  5795 net.cpp:113] Setting up inception_3a/pool
I1230 01:05:11.533635  5795 net.cpp:120] Top shape: 80 192 28 28 (12042240)
I1230 01:05:11.533644  5795 layer_factory.hpp:74] Creating layer inception_3a/pool_proj
I1230 01:05:11.533658  5795 net.cpp:84] Creating Layer inception_3a/pool_proj
I1230 01:05:11.533668  5795 net.cpp:380] inception_3a/pool_proj <- inception_3a/pool
I1230 01:05:11.533679  5795 net.cpp:338] inception_3a/pool_proj -> inception_3a/pool_proj
I1230 01:05:11.533701  5795 net.cpp:113] Setting up inception_3a/pool_proj
I1230 01:05:11.534766  5795 net.cpp:120] Top shape: 80 32 28 28 (2007040)
I1230 01:05:11.534795  5795 layer_factory.hpp:74] Creating layer inception_3a/relu_pool_proj
I1230 01:05:11.534811  5795 net.cpp:84] Creating Layer inception_3a/relu_pool_proj
I1230 01:05:11.534821  5795 net.cpp:380] inception_3a/relu_pool_proj <- inception_3a/pool_proj
I1230 01:05:11.534832  5795 net.cpp:327] inception_3a/relu_pool_proj -> inception_3a/pool_proj (in-place)
I1230 01:05:11.534857  5795 net.cpp:113] Setting up inception_3a/relu_pool_proj
I1230 01:05:11.534970  5795 net.cpp:120] Top shape: 80 32 28 28 (2007040)
I1230 01:05:11.534981  5795 layer_factory.hpp:74] Creating layer inception_3a/output
I1230 01:05:11.535004  5795 net.cpp:84] Creating Layer inception_3a/output
I1230 01:05:11.535013  5795 net.cpp:380] inception_3a/output <- inception_3a/1x1
I1230 01:05:11.535023  5795 net.cpp:380] inception_3a/output <- inception_3a/3x3
I1230 01:05:11.535032  5795 net.cpp:380] inception_3a/output <- inception_3a/5x5
I1230 01:05:11.535042  5795 net.cpp:380] inception_3a/output <- inception_3a/pool_proj
I1230 01:05:11.535054  5795 net.cpp:338] inception_3a/output -> inception_3a/output
I1230 01:05:11.535066  5795 net.cpp:113] Setting up inception_3a/output
I1230 01:05:11.535081  5795 net.cpp:120] Top shape: 80 256 28 28 (16056320)
I1230 01:05:11.535089  5795 layer_factory.hpp:74] Creating layer inception_3a/output_inception_3a/output_0_split
I1230 01:05:11.535100  5795 net.cpp:84] Creating Layer inception_3a/output_inception_3a/output_0_split
I1230 01:05:11.535109  5795 net.cpp:380] inception_3a/output_inception_3a/output_0_split <- inception_3a/output
I1230 01:05:11.535120  5795 net.cpp:338] inception_3a/output_inception_3a/output_0_split -> inception_3a/output_inception_3a/output_0_split_0
I1230 01:05:11.535133  5795 net.cpp:338] inception_3a/output_inception_3a/output_0_split -> inception_3a/output_inception_3a/output_0_split_1
I1230 01:05:11.535146  5795 net.cpp:338] inception_3a/output_inception_3a/output_0_split -> inception_3a/output_inception_3a/output_0_split_2
I1230 01:05:11.535158  5795 net.cpp:338] inception_3a/output_inception_3a/output_0_split -> inception_3a/output_inception_3a/output_0_split_3
I1230 01:05:11.535169  5795 net.cpp:113] Setting up inception_3a/output_inception_3a/output_0_split
I1230 01:05:11.535182  5795 net.cpp:120] Top shape: 80 256 28 28 (16056320)
I1230 01:05:11.535192  5795 net.cpp:120] Top shape: 80 256 28 28 (16056320)
I1230 01:05:11.535202  5795 net.cpp:120] Top shape: 80 256 28 28 (16056320)
I1230 01:05:11.535212  5795 net.cpp:120] Top shape: 80 256 28 28 (16056320)
I1230 01:05:11.535219  5795 layer_factory.hpp:74] Creating layer inception_3b/1x1
I1230 01:05:11.535233  5795 net.cpp:84] Creating Layer inception_3b/1x1
I1230 01:05:11.535243  5795 net.cpp:380] inception_3b/1x1 <- inception_3a/output_inception_3a/output_0_split_0
I1230 01:05:11.535254  5795 net.cpp:338] inception_3b/1x1 -> inception_3b/1x1
I1230 01:05:11.535266  5795 net.cpp:113] Setting up inception_3b/1x1
I1230 01:05:11.537082  5795 net.cpp:120] Top shape: 80 128 28 28 (8028160)
I1230 01:05:11.537108  5795 layer_factory.hpp:74] Creating layer inception_3b/relu_1x1
I1230 01:05:11.537122  5795 net.cpp:84] Creating Layer inception_3b/relu_1x1
I1230 01:05:11.537130  5795 net.cpp:380] inception_3b/relu_1x1 <- inception_3b/1x1
I1230 01:05:11.537142  5795 net.cpp:327] inception_3b/relu_1x1 -> inception_3b/1x1 (in-place)
I1230 01:05:11.537154  5795 net.cpp:113] Setting up inception_3b/relu_1x1
I1230 01:05:11.538043  5795 net.cpp:120] Top shape: 80 128 28 28 (8028160)
I1230 01:05:11.538060  5795 layer_factory.hpp:74] Creating layer inception_3b/3x3_reduce
I1230 01:05:11.538074  5795 net.cpp:84] Creating Layer inception_3b/3x3_reduce
I1230 01:05:11.538084  5795 net.cpp:380] inception_3b/3x3_reduce <- inception_3a/output_inception_3a/output_0_split_1
I1230 01:05:11.538099  5795 net.cpp:338] inception_3b/3x3_reduce -> inception_3b/3x3_reduce
I1230 01:05:11.538113  5795 net.cpp:113] Setting up inception_3b/3x3_reduce
I1230 01:05:11.540606  5795 net.cpp:120] Top shape: 80 128 28 28 (8028160)
I1230 01:05:11.540628  5795 layer_factory.hpp:74] Creating layer inception_3b/relu_3x3_reduce
I1230 01:05:11.540643  5795 net.cpp:84] Creating Layer inception_3b/relu_3x3_reduce
I1230 01:05:11.540652  5795 net.cpp:380] inception_3b/relu_3x3_reduce <- inception_3b/3x3_reduce
I1230 01:05:11.540663  5795 net.cpp:327] inception_3b/relu_3x3_reduce -> inception_3b/3x3_reduce (in-place)
I1230 01:05:11.540683  5795 net.cpp:113] Setting up inception_3b/relu_3x3_reduce
I1230 01:05:11.540788  5795 net.cpp:120] Top shape: 80 128 28 28 (8028160)
I1230 01:05:11.540799  5795 layer_factory.hpp:74] Creating layer inception_3b/3x3
I1230 01:05:11.540818  5795 net.cpp:84] Creating Layer inception_3b/3x3
I1230 01:05:11.540828  5795 net.cpp:380] inception_3b/3x3 <- inception_3b/3x3_reduce
I1230 01:05:11.540846  5795 net.cpp:338] inception_3b/3x3 -> inception_3b/3x3
I1230 01:05:11.540860  5795 net.cpp:113] Setting up inception_3b/3x3
I1230 01:05:11.559504  5795 net.cpp:120] Top shape: 80 192 28 28 (12042240)
I1230 01:05:11.559566  5795 layer_factory.hpp:74] Creating layer inception_3b/relu_3x3
I1230 01:05:11.559587  5795 net.cpp:84] Creating Layer inception_3b/relu_3x3
I1230 01:05:11.559597  5795 net.cpp:380] inception_3b/relu_3x3 <- inception_3b/3x3
I1230 01:05:11.559615  5795 net.cpp:327] inception_3b/relu_3x3 -> inception_3b/3x3 (in-place)
I1230 01:05:11.559633  5795 net.cpp:113] Setting up inception_3b/relu_3x3
I1230 01:05:11.559734  5795 net.cpp:120] Top shape: 80 192 28 28 (12042240)
I1230 01:05:11.559746  5795 layer_factory.hpp:74] Creating layer inception_3b/5x5_reduce
I1230 01:05:11.559765  5795 net.cpp:84] Creating Layer inception_3b/5x5_reduce
I1230 01:05:11.559775  5795 net.cpp:380] inception_3b/5x5_reduce <- inception_3a/output_inception_3a/output_0_split_2
I1230 01:05:11.559790  5795 net.cpp:338] inception_3b/5x5_reduce -> inception_3b/5x5_reduce
I1230 01:05:11.559808  5795 net.cpp:113] Setting up inception_3b/5x5_reduce
I1230 01:05:11.561800  5795 net.cpp:120] Top shape: 80 32 28 28 (2007040)
I1230 01:05:11.561825  5795 layer_factory.hpp:74] Creating layer inception_3b/relu_5x5_reduce
I1230 01:05:11.561837  5795 net.cpp:84] Creating Layer inception_3b/relu_5x5_reduce
I1230 01:05:11.561847  5795 net.cpp:380] inception_3b/relu_5x5_reduce <- inception_3b/5x5_reduce
I1230 01:05:11.561858  5795 net.cpp:327] inception_3b/relu_5x5_reduce -> inception_3b/5x5_reduce (in-place)
I1230 01:05:11.561872  5795 net.cpp:113] Setting up inception_3b/relu_5x5_reduce
I1230 01:05:11.561970  5795 net.cpp:120] Top shape: 80 32 28 28 (2007040)
I1230 01:05:11.561985  5795 layer_factory.hpp:74] Creating layer inception_3b/5x5
I1230 01:05:11.562000  5795 net.cpp:84] Creating Layer inception_3b/5x5
I1230 01:05:11.562008  5795 net.cpp:380] inception_3b/5x5 <- inception_3b/5x5_reduce
I1230 01:05:11.562022  5795 net.cpp:338] inception_3b/5x5 -> inception_3b/5x5
I1230 01:05:11.562044  5795 net.cpp:113] Setting up inception_3b/5x5
I1230 01:05:11.563963  5795 net.cpp:120] Top shape: 80 96 28 28 (6021120)
I1230 01:05:11.563987  5795 layer_factory.hpp:74] Creating layer inception_3b/relu_5x5
I1230 01:05:11.563997  5795 net.cpp:84] Creating Layer inception_3b/relu_5x5
I1230 01:05:11.564007  5795 net.cpp:380] inception_3b/relu_5x5 <- inception_3b/5x5
I1230 01:05:11.564020  5795 net.cpp:327] inception_3b/relu_5x5 -> inception_3b/5x5 (in-place)
I1230 01:05:11.564033  5795 net.cpp:113] Setting up inception_3b/relu_5x5
I1230 01:05:11.564492  5795 net.cpp:120] Top shape: 80 96 28 28 (6021120)
I1230 01:05:11.564510  5795 layer_factory.hpp:74] Creating layer inception_3b/pool
I1230 01:05:11.564522  5795 layer_factory.cpp:56] CUDNN does not support padding or multiple tops. Using Caffe's own pooling layer.
I1230 01:05:11.564533  5795 net.cpp:84] Creating Layer inception_3b/pool
I1230 01:05:11.564541  5795 net.cpp:380] inception_3b/pool <- inception_3a/output_inception_3a/output_0_split_3
I1230 01:05:11.564554  5795 net.cpp:338] inception_3b/pool -> inception_3b/pool
I1230 01:05:11.564568  5795 net.cpp:113] Setting up inception_3b/pool
I1230 01:05:11.564584  5795 net.cpp:120] Top shape: 80 256 28 28 (16056320)
I1230 01:05:11.564591  5795 layer_factory.hpp:74] Creating layer inception_3b/pool_proj
I1230 01:05:11.564609  5795 net.cpp:84] Creating Layer inception_3b/pool_proj
I1230 01:05:11.564617  5795 net.cpp:380] inception_3b/pool_proj <- inception_3b/pool
I1230 01:05:11.564631  5795 net.cpp:338] inception_3b/pool_proj -> inception_3b/pool_proj
I1230 01:05:11.564656  5795 net.cpp:113] Setting up inception_3b/pool_proj
I1230 01:05:11.572513  5795 net.cpp:120] Top shape: 80 64 28 28 (4014080)
I1230 01:05:11.572573  5795 layer_factory.hpp:74] Creating layer inception_3b/relu_pool_proj
I1230 01:05:11.572590  5795 net.cpp:84] Creating Layer inception_3b/relu_pool_proj
I1230 01:05:11.572602  5795 net.cpp:380] inception_3b/relu_pool_proj <- inception_3b/pool_proj
I1230 01:05:11.572618  5795 net.cpp:327] inception_3b/relu_pool_proj -> inception_3b/pool_proj (in-place)
I1230 01:05:11.572634  5795 net.cpp:113] Setting up inception_3b/relu_pool_proj
I1230 01:05:11.572743  5795 net.cpp:120] Top shape: 80 64 28 28 (4014080)
I1230 01:05:11.572754  5795 layer_factory.hpp:74] Creating layer inception_3b/output
I1230 01:05:11.572767  5795 net.cpp:84] Creating Layer inception_3b/output
I1230 01:05:11.572775  5795 net.cpp:380] inception_3b/output <- inception_3b/1x1
I1230 01:05:11.572787  5795 net.cpp:380] inception_3b/output <- inception_3b/3x3
I1230 01:05:11.572798  5795 net.cpp:380] inception_3b/output <- inception_3b/5x5
I1230 01:05:11.572808  5795 net.cpp:380] inception_3b/output <- inception_3b/pool_proj
I1230 01:05:11.572818  5795 net.cpp:338] inception_3b/output -> inception_3b/output
I1230 01:05:11.572832  5795 net.cpp:113] Setting up inception_3b/output
I1230 01:05:11.572847  5795 net.cpp:120] Top shape: 80 480 28 28 (30105600)
I1230 01:05:11.572855  5795 layer_factory.hpp:74] Creating layer pool3/3x3_s2
I1230 01:05:11.572872  5795 net.cpp:84] Creating Layer pool3/3x3_s2
I1230 01:05:11.572881  5795 net.cpp:380] pool3/3x3_s2 <- inception_3b/output
I1230 01:05:11.572892  5795 net.cpp:338] pool3/3x3_s2 -> pool3/3x3_s2
I1230 01:05:11.572904  5795 net.cpp:113] Setting up pool3/3x3_s2
I1230 01:05:11.573005  5795 net.cpp:120] Top shape: 80 480 14 14 (7526400)
I1230 01:05:11.573019  5795 layer_factory.hpp:74] Creating layer pool3/3x3_s2_pool3/3x3_s2_0_split
I1230 01:05:11.573031  5795 net.cpp:84] Creating Layer pool3/3x3_s2_pool3/3x3_s2_0_split
I1230 01:05:11.573040  5795 net.cpp:380] pool3/3x3_s2_pool3/3x3_s2_0_split <- pool3/3x3_s2
I1230 01:05:11.581923  5795 net.cpp:338] pool3/3x3_s2_pool3/3x3_s2_0_split -> pool3/3x3_s2_pool3/3x3_s2_0_split_0
I1230 01:05:11.581950  5795 net.cpp:338] pool3/3x3_s2_pool3/3x3_s2_0_split -> pool3/3x3_s2_pool3/3x3_s2_0_split_1
I1230 01:05:11.581964  5795 net.cpp:338] pool3/3x3_s2_pool3/3x3_s2_0_split -> pool3/3x3_s2_pool3/3x3_s2_0_split_2
I1230 01:05:11.581976  5795 net.cpp:338] pool3/3x3_s2_pool3/3x3_s2_0_split -> pool3/3x3_s2_pool3/3x3_s2_0_split_3
I1230 01:05:11.581987  5795 net.cpp:113] Setting up pool3/3x3_s2_pool3/3x3_s2_0_split
I1230 01:05:11.582005  5795 net.cpp:120] Top shape: 80 480 14 14 (7526400)
I1230 01:05:11.582015  5795 net.cpp:120] Top shape: 80 480 14 14 (7526400)
I1230 01:05:11.582026  5795 net.cpp:120] Top shape: 80 480 14 14 (7526400)
I1230 01:05:11.582034  5795 net.cpp:120] Top shape: 80 480 14 14 (7526400)
I1230 01:05:11.582043  5795 layer_factory.hpp:74] Creating layer inception_4a/1x1
I1230 01:05:11.582061  5795 net.cpp:84] Creating Layer inception_4a/1x1
I1230 01:05:11.582069  5795 net.cpp:380] inception_4a/1x1 <- pool3/3x3_s2_pool3/3x3_s2_0_split_0
I1230 01:05:11.582089  5795 net.cpp:338] inception_4a/1x1 -> inception_4a/1x1
I1230 01:05:11.582105  5795 net.cpp:113] Setting up inception_4a/1x1
I1230 01:05:11.583894  5795 net.cpp:120] Top shape: 80 192 14 14 (3010560)
I1230 01:05:11.583916  5795 layer_factory.hpp:74] Creating layer inception_4a/relu_1x1
I1230 01:05:11.583928  5795 net.cpp:84] Creating Layer inception_4a/relu_1x1
I1230 01:05:11.583937  5795 net.cpp:380] inception_4a/relu_1x1 <- inception_4a/1x1
I1230 01:05:11.583948  5795 net.cpp:327] inception_4a/relu_1x1 -> inception_4a/1x1 (in-place)
I1230 01:05:11.583961  5795 net.cpp:113] Setting up inception_4a/relu_1x1
I1230 01:05:11.584291  5795 net.cpp:120] Top shape: 80 192 14 14 (3010560)
I1230 01:05:11.584307  5795 layer_factory.hpp:74] Creating layer inception_4a/3x3_reduce
I1230 01:05:11.584323  5795 net.cpp:84] Creating Layer inception_4a/3x3_reduce
I1230 01:05:11.584332  5795 net.cpp:380] inception_4a/3x3_reduce <- pool3/3x3_s2_pool3/3x3_s2_0_split_1
I1230 01:05:11.584379  5795 net.cpp:338] inception_4a/3x3_reduce -> inception_4a/3x3_reduce
I1230 01:05:11.584395  5795 net.cpp:113] Setting up inception_4a/3x3_reduce
I1230 01:05:11.585552  5795 net.cpp:120] Top shape: 80 96 14 14 (1505280)
I1230 01:05:11.585584  5795 layer_factory.hpp:74] Creating layer inception_4a/relu_3x3_reduce
I1230 01:05:11.585600  5795 net.cpp:84] Creating Layer inception_4a/relu_3x3_reduce
I1230 01:05:11.585609  5795 net.cpp:380] inception_4a/relu_3x3_reduce <- inception_4a/3x3_reduce
I1230 01:05:11.585620  5795 net.cpp:327] inception_4a/relu_3x3_reduce -> inception_4a/3x3_reduce (in-place)
I1230 01:05:11.585633  5795 net.cpp:113] Setting up inception_4a/relu_3x3_reduce
I1230 01:05:11.585731  5795 net.cpp:120] Top shape: 80 96 14 14 (1505280)
I1230 01:05:11.585741  5795 layer_factory.hpp:74] Creating layer inception_4a/3x3
I1230 01:05:11.585757  5795 net.cpp:84] Creating Layer inception_4a/3x3
I1230 01:05:11.585764  5795 net.cpp:380] inception_4a/3x3 <- inception_4a/3x3_reduce
I1230 01:05:11.585778  5795 net.cpp:338] inception_4a/3x3 -> inception_4a/3x3
I1230 01:05:11.585794  5795 net.cpp:113] Setting up inception_4a/3x3
I1230 01:05:11.588629  5795 net.cpp:120] Top shape: 80 208 14 14 (3261440)
I1230 01:05:11.588650  5795 layer_factory.hpp:74] Creating layer inception_4a/relu_3x3
I1230 01:05:11.588661  5795 net.cpp:84] Creating Layer inception_4a/relu_3x3
I1230 01:05:11.588670  5795 net.cpp:380] inception_4a/relu_3x3 <- inception_4a/3x3
I1230 01:05:11.588681  5795 net.cpp:327] inception_4a/relu_3x3 -> inception_4a/3x3 (in-place)
I1230 01:05:11.588693  5795 net.cpp:113] Setting up inception_4a/relu_3x3
I1230 01:05:11.588789  5795 net.cpp:120] Top shape: 80 208 14 14 (3261440)
I1230 01:05:11.588799  5795 layer_factory.hpp:74] Creating layer inception_4a/5x5_reduce
I1230 01:05:11.588814  5795 net.cpp:84] Creating Layer inception_4a/5x5_reduce
I1230 01:05:11.588822  5795 net.cpp:380] inception_4a/5x5_reduce <- pool3/3x3_s2_pool3/3x3_s2_0_split_2
I1230 01:05:11.588837  5795 net.cpp:338] inception_4a/5x5_reduce -> inception_4a/5x5_reduce
I1230 01:05:11.588851  5795 net.cpp:113] Setting up inception_4a/5x5_reduce
I1230 01:05:11.589509  5795 net.cpp:120] Top shape: 80 16 14 14 (250880)
I1230 01:05:11.589531  5795 layer_factory.hpp:74] Creating layer inception_4a/relu_5x5_reduce
I1230 01:05:11.589546  5795 net.cpp:84] Creating Layer inception_4a/relu_5x5_reduce
I1230 01:05:11.589555  5795 net.cpp:380] inception_4a/relu_5x5_reduce <- inception_4a/5x5_reduce
I1230 01:05:11.589566  5795 net.cpp:327] inception_4a/relu_5x5_reduce -> inception_4a/5x5_reduce (in-place)
I1230 01:05:11.589578  5795 net.cpp:113] Setting up inception_4a/relu_5x5_reduce
I1230 01:05:11.589679  5795 net.cpp:120] Top shape: 80 16 14 14 (250880)
I1230 01:05:11.589689  5795 layer_factory.hpp:74] Creating layer inception_4a/5x5
I1230 01:05:11.589704  5795 net.cpp:84] Creating Layer inception_4a/5x5
I1230 01:05:11.589712  5795 net.cpp:380] inception_4a/5x5 <- inception_4a/5x5_reduce
I1230 01:05:11.589725  5795 net.cpp:338] inception_4a/5x5 -> inception_4a/5x5
I1230 01:05:11.589738  5795 net.cpp:113] Setting up inception_4a/5x5
I1230 01:05:11.590530  5795 net.cpp:120] Top shape: 80 48 14 14 (752640)
I1230 01:05:11.590554  5795 layer_factory.hpp:74] Creating layer inception_4a/relu_5x5
I1230 01:05:11.590565  5795 net.cpp:84] Creating Layer inception_4a/relu_5x5
I1230 01:05:11.590574  5795 net.cpp:380] inception_4a/relu_5x5 <- inception_4a/5x5
I1230 01:05:11.590585  5795 net.cpp:327] inception_4a/relu_5x5 -> inception_4a/5x5 (in-place)
I1230 01:05:11.590596  5795 net.cpp:113] Setting up inception_4a/relu_5x5
I1230 01:05:11.590919  5795 net.cpp:120] Top shape: 80 48 14 14 (752640)
I1230 01:05:11.590934  5795 layer_factory.hpp:74] Creating layer inception_4a/pool
I1230 01:05:11.590945  5795 layer_factory.cpp:56] CUDNN does not support padding or multiple tops. Using Caffe's own pooling layer.
I1230 01:05:11.590955  5795 net.cpp:84] Creating Layer inception_4a/pool
I1230 01:05:11.590971  5795 net.cpp:380] inception_4a/pool <- pool3/3x3_s2_pool3/3x3_s2_0_split_3
I1230 01:05:11.590996  5795 net.cpp:338] inception_4a/pool -> inception_4a/pool
I1230 01:05:11.591011  5795 net.cpp:113] Setting up inception_4a/pool
I1230 01:05:11.591025  5795 net.cpp:120] Top shape: 80 480 14 14 (7526400)
I1230 01:05:11.591033  5795 layer_factory.hpp:74] Creating layer inception_4a/pool_proj
I1230 01:05:11.591048  5795 net.cpp:84] Creating Layer inception_4a/pool_proj
I1230 01:05:11.591058  5795 net.cpp:380] inception_4a/pool_proj <- inception_4a/pool
I1230 01:05:11.591069  5795 net.cpp:338] inception_4a/pool_proj -> inception_4a/pool_proj
I1230 01:05:11.591083  5795 net.cpp:113] Setting up inception_4a/pool_proj
I1230 01:05:11.594480  5795 net.cpp:120] Top shape: 80 64 14 14 (1003520)
I1230 01:05:11.594504  5795 layer_factory.hpp:74] Creating layer inception_4a/relu_pool_proj
I1230 01:05:11.594517  5795 net.cpp:84] Creating Layer inception_4a/relu_pool_proj
I1230 01:05:11.594527  5795 net.cpp:380] inception_4a/relu_pool_proj <- inception_4a/pool_proj
I1230 01:05:11.594540  5795 net.cpp:327] inception_4a/relu_pool_proj -> inception_4a/pool_proj (in-place)
I1230 01:05:11.594553  5795 net.cpp:113] Setting up inception_4a/relu_pool_proj
I1230 01:05:11.594660  5795 net.cpp:120] Top shape: 80 64 14 14 (1003520)
I1230 01:05:11.594671  5795 layer_factory.hpp:74] Creating layer inception_4a/output
I1230 01:05:11.594686  5795 net.cpp:84] Creating Layer inception_4a/output
I1230 01:05:11.594693  5795 net.cpp:380] inception_4a/output <- inception_4a/1x1
I1230 01:05:11.594704  5795 net.cpp:380] inception_4a/output <- inception_4a/3x3
I1230 01:05:11.594713  5795 net.cpp:380] inception_4a/output <- inception_4a/5x5
I1230 01:05:11.594722  5795 net.cpp:380] inception_4a/output <- inception_4a/pool_proj
I1230 01:05:11.594738  5795 net.cpp:338] inception_4a/output -> inception_4a/output
I1230 01:05:11.594749  5795 net.cpp:113] Setting up inception_4a/output
I1230 01:05:11.594763  5795 net.cpp:120] Top shape: 80 512 14 14 (8028160)
I1230 01:05:11.594771  5795 layer_factory.hpp:74] Creating layer inception_4a/output_inception_4a/output_0_split
I1230 01:05:11.594781  5795 net.cpp:84] Creating Layer inception_4a/output_inception_4a/output_0_split
I1230 01:05:11.594792  5795 net.cpp:380] inception_4a/output_inception_4a/output_0_split <- inception_4a/output
I1230 01:05:11.594802  5795 net.cpp:338] inception_4a/output_inception_4a/output_0_split -> inception_4a/output_inception_4a/output_0_split_0
I1230 01:05:11.594815  5795 net.cpp:338] inception_4a/output_inception_4a/output_0_split -> inception_4a/output_inception_4a/output_0_split_1
I1230 01:05:11.594827  5795 net.cpp:338] inception_4a/output_inception_4a/output_0_split -> inception_4a/output_inception_4a/output_0_split_2
I1230 01:05:11.594841  5795 net.cpp:338] inception_4a/output_inception_4a/output_0_split -> inception_4a/output_inception_4a/output_0_split_3
I1230 01:05:11.594851  5795 net.cpp:338] inception_4a/output_inception_4a/output_0_split -> inception_4a/output_inception_4a/output_0_split_4
I1230 01:05:11.594862  5795 net.cpp:113] Setting up inception_4a/output_inception_4a/output_0_split
I1230 01:05:11.594876  5795 net.cpp:120] Top shape: 80 512 14 14 (8028160)
I1230 01:05:11.594884  5795 net.cpp:120] Top shape: 80 512 14 14 (8028160)
I1230 01:05:11.594894  5795 net.cpp:120] Top shape: 80 512 14 14 (8028160)
I1230 01:05:11.594903  5795 net.cpp:120] Top shape: 80 512 14 14 (8028160)
I1230 01:05:11.594913  5795 net.cpp:120] Top shape: 80 512 14 14 (8028160)
I1230 01:05:11.594920  5795 layer_factory.hpp:74] Creating layer loss1/ave_pool
I1230 01:05:11.594933  5795 net.cpp:84] Creating Layer loss1/ave_pool
I1230 01:05:11.594943  5795 net.cpp:380] loss1/ave_pool <- inception_4a/output_inception_4a/output_0_split_0
I1230 01:05:11.594954  5795 net.cpp:338] loss1/ave_pool -> loss1/ave_pool
I1230 01:05:11.594966  5795 net.cpp:113] Setting up loss1/ave_pool
I1230 01:05:11.595063  5795 net.cpp:120] Top shape: 80 512 4 4 (655360)
I1230 01:05:11.595073  5795 layer_factory.hpp:74] Creating layer loss1/conv
I1230 01:05:11.595101  5795 net.cpp:84] Creating Layer loss1/conv
I1230 01:05:11.595119  5795 net.cpp:380] loss1/conv <- loss1/ave_pool
I1230 01:05:11.595132  5795 net.cpp:338] loss1/conv -> loss1/conv
I1230 01:05:11.595146  5795 net.cpp:113] Setting up loss1/conv
I1230 01:05:11.619550  5795 net.cpp:120] Top shape: 80 128 4 4 (163840)
I1230 01:05:11.619619  5795 layer_factory.hpp:74] Creating layer loss1/relu_conv
I1230 01:05:11.619637  5795 net.cpp:84] Creating Layer loss1/relu_conv
I1230 01:05:11.619648  5795 net.cpp:380] loss1/relu_conv <- loss1/conv
I1230 01:05:11.619664  5795 net.cpp:327] loss1/relu_conv -> loss1/conv (in-place)
I1230 01:05:11.619684  5795 net.cpp:113] Setting up loss1/relu_conv
I1230 01:05:11.619786  5795 net.cpp:120] Top shape: 80 128 4 4 (163840)
I1230 01:05:11.619799  5795 layer_factory.hpp:74] Creating layer loss1/fc
I1230 01:05:11.619817  5795 net.cpp:84] Creating Layer loss1/fc
I1230 01:05:11.619827  5795 net.cpp:380] loss1/fc <- loss1/conv
I1230 01:05:11.619840  5795 net.cpp:338] loss1/fc -> loss1/fc
I1230 01:05:11.619863  5795 net.cpp:113] Setting up loss1/fc
F1230 01:05:11.731197  5839 data_transformer.cpp:209] Check failed: height <= img_height (224 vs. 146) 
*** Check failure stack trace: ***
    @     0x7f689ab44dbd  google::LogMessage::Fail()
    @     0x7f689ab46c5d  google::LogMessage::SendToLog()
    @     0x7f689ab449ac  google::LogMessage::Flush()
    @     0x7f689ab4757e  google::LogMessageFatal::~LogMessageFatal()
    @     0x7f689aebcb0a  caffe::DataTransformer<>::Transform()
    @     0x7f689af85a26  caffe::ImageDataLayer<>::InternalThreadEntry()
    @     0x7f6892927a4a  (unknown)
    @     0x7f688f492182  start_thread
    @     0x7f689a13447d  (unknown)
